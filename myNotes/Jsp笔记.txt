一、jsp概述
	JSP全称是Java Server Pages，它和servle技术一样，都是SUN公司定义的一种用于开发动态web资源的技术。JSP实际上就是Servlet。
	jsp = html + java
	html:静态内容
	servlet：服务器端的小应用程序。适合编写java逻辑代码，如果编写网页内容--苦逼。
	jsp:适合编写输出动态内容，但不适合编写java逻辑。


二、jsp的原理
	翻译->编译->执行


三、jsp的最佳实践
	Servlet：控制器。重点编写java代码逻辑 （获取表单数据、处理业务逻辑、分发转向）
	JSP：代码显示模板。重点在于显示数据


四、jsp的基本语法
	1、JSP模版元素 
		网页的静态内容。如：html标签和文本。
	2、JSP的脚本
		声明  : <%! %> 表示在类中定义全局成员，和静态块。
		java程序片(小脚本 ) : <% java代码 %>。
		表达式 : <%= 2+3 %> 等价于out.print(2+3)。
	3、JSP注释
		JSP注释：<%-- 被注释的内容 --%> 特点：安全，省流量
		网页注释：<!-- 网页注释 -->    特点：不安全，费流量

	4、三个指令标记
		page指令标记
			作用：用于定义JSP页面的各种属性
			属性：	contentType：设置页面文本的编码
				import：引入文件
				language：定义jsp页面使用的脚本语言，目前只能是java
				session：是否需要使用内置session对象
				buffer： 用来指定out对象设置的缓冲区的大小和是否使用缓冲区
				autoFlush： 指定的out的缓冲区填满时是否自动刷新
				isThreadSafe： 是否可以多线程访问
				pageEncoding：与contentType类似

		Include指令标记
			作用：用于导入其他资源到当前页面中。
				静态导入：<%@ include file="/include/header.jsp" %>
				动态导入：<jsp:include page="/include/header.jsp">
						<jsp:param name = "" value = ""/>//param子标记
					</jsp:include>
			两者的区别：翻译的时间段不同
				前者：在翻译时就把两个文件合并
				后者：不会合并文件，当代码执行到include时，才包含另一个文件的内容。
			原则：能用静的就不用动的。

		taglib指令标记
			作用：在JSP页面中导入JSTL标签库。替换jsp中的java代码片段。

	另注：
		Tag文件：Tag文件的常用指令与JSP文件类似
			1).Tag标记的格式：<tag 文件名/>或
				<tag 文件名>
					标记体
				<tag 文件名/>
			2).tag指令：类似JSP页面的page指令，用来设值一些属性的值。
			3).include指令：用于导入其他资源到当前页面中。
			4).attribute指令：获取从jsp页面中传过来的值。
			5).variable指令：传值给jsp页面。

	5、四个动作
		<jsp:include > 动态加载
		<jsp:param > 设置请求参数，为其它标记提供附加信息
		<jsp:forward> 请求转发
		<jsp:plugin>  加载java plugin插件
		<jsp:useBean> 创建一个对象，实现动态静态分割
	       另注:
		<jsp:setProperty> 给指定的对象属性赋值
		<jsp:getProperty> 取出指定对象的属性值

	6、九个内置对象
		对象名		类型						说明
		request		javax.servlet.http.HttpServletRequest		请求对象
		response	javax.servlet.http.HttpServletResponse		响应对象
		session		javax.servlet.http.HttpSession			由session="true"开关
		application	javax.servlet.ServletContext			
		exception	java.lang.Throwable				由isErrorPage="false"开关
		page		java.lang.Object当前对象this			当前servlet实例
		config		javax.servlet.ServletConfig			
		out	 	javax.servlet.jsp.JspWriter			字符输出流，相当于 printWriter对象
		pageContext	javax.servlet.jsp.PageContext	
			
			pageContext(重要)
				1、本身也是一个域对象：它可以操作其它三个域对象（request session application）的数据
	7、四大域对象：实际开发
		PageContext : pageConext 存放的数据在当前页面有效。开发时使用较少。
		ServletRequest: request  存放的数据在一次请求（转发）内有效。使用非常多。
		HttpSession: session 存放的数据在一次会话中有效。使用的比较多。如：存放用户的登录信息，购物车功能。
		ServletContext: application 存放的数据在整个应用范围内都有效。因为范围太大，应尽量少用。


五、EL表达式
	1、EL概述和基本语法 
 		EL表达式：expression language 表达式语言
 		要简化jsp中java代码开发。
 		它不是一种开发语言，是jsp中获取数据的一种规范
	2、EL的具体功能 
		获取数据 运算 隐式对象：11个


十、JSTL
	1、什么是JSTL
		JSTL（JavaServerPages Standard Tag Library）JSP标准标签库
	2、JSTL的作用
		使用JSTL实现JSP页面中逻辑处理。如判断、循环等



